name: test rub ok

on:
  pull_request:
    types: [closed, synchronize]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TEXT: Hola caracola

jobs:
  merge-comment:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract-URL from PR body
        id: extract-url
        run: |
          body_text="$(echo "${{ github.event.pull_request.body }}" | tr -d '\r\n')"
          echo "$body_text"
          urls="$(echo "$body_text" | grep -oP 'https?://[^\s]+\b(?:\([^)]*\))?')"
          echo "$urls"
          for url in "${urls[@]}"; do
          modifiedurl=$(echo "$url" | sed 's|https://github.com/|https://api.github.com/repos/|; s|$|/comments|')
          echo "$modifiedurl"
          done
          issue_numbers=$(echo "$body_text" | grep -oP '(?<!\[)#(\d+)(?!\])' | sed 's/#//')
          if [ -z "$issue_numbers" ]; then
            echo "No issue numbers found."
           else
            echo "$issue_numbers"
          fi
          IFS=$'\n' read -d '' -ra MY_URLS <<< "$modifiedurl"
          for URL in "${MY_URLS[@]}"; do
            if curl --output /dev/null --silent --head --fail "$URL"; then
              curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" "$URL" -d "{\"body\": \"$TEXT\"}"
              echo "Mensaje enviado correctamente a $URL"
            else
              echo "No se pudo conectar con $URL. El servidor no estÃ¡ disponible."
            fi
          done
          fi

      #- name: Generate URL for comments
      #  env:
          
     #   run: |
      #    URL="https://api.github.com/repos/${{ github.repository }}/issues/${{steps.numero-issue.outputs.NUMERO_ISSUE}}/comments"
       #   curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" $URL -d "{\"body\": \"$TEXT\"}"
