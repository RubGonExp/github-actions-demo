name: test rub ok
on:
  pull_request:
    types: [open, synchronize]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  merge-comment:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: PR open labels issues
        id: pr_open_labeling
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          body_text="$(echo "${{ github.event.pull_request.body }}" | tr -d '\r\n')"
          in_prs="$(echo "$body_text" | grep -oP 'https://(api\.)?github\.com/[^\s]+\b(?:\([^)]*\))?')"
            for in_pr in ${in_prs[@]}; do
              urls=$(echo "$in_pr" | sed 's|https://github.com/|https://api.github.com/repos/|')
              states=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "$urls" | jq -r '.state')
                if [ "$states" = "closed" ]; then
                  message="Issue closed by PR #$PR_NUMBER in [enlace]($PR_URL)"
                  curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -d "{\"body\": \"$message\"}" "$urls/comments"
                elif [ "$states" = "open" ]; then
                  labels=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "$urls" | jq -r '.labels[].name')
                    if ! grep -q 'In review' <<< "$labels"; then
                      curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -d "{\"labels\": [\"In review\"]}" "$urls/labels"
                    fi
                fi
            done
          issue_numbers=$(echo "$body_text" | grep -oP '(?<!\[)#(\d+)(?!\])' | sed 's/#//')
            for issue_number in ${issue_numbers[@]}; do
              url="https://api.github.com/repos/${{ github.repository }}/issues/$issue_number"
              state=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "$url" | jq -r '.state')
                if [ "$state" = "closed" ]; then
                  message="Issue closed by PR #$PR_NUMBER"
                  curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -d "{\"body\": \"$message\"}" "$url/comments"
                elif [ "$state" = "open" ]; then
                  labels=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "$url" | jq -r '.labels[].name')
                    if ! grep -q 'In review' <<< "$labels"; then
                      curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -d "{\"labels\": [\"In review\"]}" "$url/labels"
                    fi
                fi
            done
