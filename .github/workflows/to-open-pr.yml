name: test rub ok
on:
  pull_request:
    types: [open, synchronize]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  merge-comment:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: PR open labels issues
        id: pr_open_labeling
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          body_text="$(echo "${{ github.event.pull_request.body }}" | tr -d '\r\n')"
            echo "$body_text"
          in_prs="$(echo "$body_text" | grep -oP 'https://(api\.)?github\.com/[^\s]+\b(?:\([^)]*\))?')"
          for in_pr in ${in_prs[@]}; do
            urls=$(echo "$in_pr" | sed 's|https://github.com/|https://api.github.com/repos/|')
            states=$(curl -X GET -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" "$urls" | jq -r '.state')
            echo "$urls"
            echo "$states"
              if [ "$states" = "closed" ]; then
                message="Issue closed by PR #$PR_NUMBER"
                curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d "{\"body\": \"$message\"}" "$urls/comments"
              elif [ "$states" = "open" ]; then
                labels=$(curl -X GET -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" "$urls" | jq -r '.labels[].name')
                echo "$labels"
                  if ! grep -q 'In review' <<< "$labels"; then
                  curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d "{\"labels\": [\"In review\"]}" "$urls/labels"
                  fi
              fi
          done
          issue_numbers=$(echo "$body_text" | grep -oP '(?<!\[)#(\d+)(?!\])' | sed 's/#//')
            echo "$issue_numbers"
            echo "$PR_NUMBER"
            echo "$urls"
          for issue_number in ${issue_numbers[@]}; do
            url="https://api.github.com/repos/${{ github.repository }}/issues/$issue_number"
            state=$(curl -X GET -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" "$url" | jq -r '.state')
            echo "$state"
            echo "$url"
            if [ "$state" = "closed" ]; then
              message="Issue closed by PR #$PR_NUMBER"
              curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d "{\"body\": \"$message\"}" "$url/comments"
            elif [ "$state" = "open" ]; then
              labels=$(curl -X GET -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" "$url" | jq -r '.labels[].name')
              echo "$labels"
              if ! grep -q 'In review' <<< "$labels"; then
                curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d "{\"labels\": [\"In review\"]}" "$url/labels"
              fi
            fi
          done
